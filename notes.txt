### frontend ###

<div id="">
id é unico e o css deste deve iniciar com #

<div class="">
class é como um tipo que varias tags podem pertercer e o css desta deve iniciar com .


padding - margem interna
1 valor é para horizontal
2 valor é para vertical

useEffect - quando alterar um valor x execute a função y

axios - lib pra chamar endpoints


useEffect(() => {
    const dmin = minDate.toISOString().slice(0, 10);
    const dmax = maxDate.toISOString().slice(0, 10);

    axios.get(`${BASE_URL}/sales?minDate=${dmin}&maxDate=${dmax}`)
        .then(response => {
            setSales(response.data.content);
        })
}, [minDate, maxDate]);  

os colchetes por ultimo aqui são pra indicar quais são as variaveis que ao sofrerem alteração devem refazer a chamada a API


props é como se fossem parametros que um componente react recebe.


### backend ###

JPA biblioteca de mapeamento relacional

h2 é um banco em memória ideal para testes e estudos
http://localhost:8080/h2-console/ - para acessar o banco no browser


@Entity - em cima de uma classe, é pra que a classe seja equivalente a uma tabela do banco
@Valeu - get envs definidas no application properties

.repositories
interfaces responsáveis pelo acesso ao banco
exemplo: 
    public interface SaleRepository extends JpaRepository<Sale, Long>
    Sale tipo da entidade; Long tipo do ID da entidade

.service
camada para regras de negócio

### heroku ###
criar as envs la


### atalhos ###
ctrl + shift + o - importa automatico



